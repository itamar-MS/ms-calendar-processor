name: Calendar Sync with Base44

on:
  schedule:
    # Run every 3 hours (at 00:00, 03:00, 06:00, 09:00, 12:00, 15:00, 18:00, 21:00 UTC)
    - cron: '0 */3 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  sync-calendar:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create output directory
      run: mkdir -p output
      
    - name: Install package in editable mode
      run: pip install -e .

    - name: Run calendar sync
      env:
        PYTHONPATH: ${{ github.workspace }}:${{ github.workspace }}/src
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        HUBSPOT_API_KEY: ${{ secrets.HUBSPOT_API_KEY }}
        BASE44_API_KEY: ${{ secrets.BASE44_API_KEY }}
        CAMPUS_DB_CONN: ${{ secrets.CAMPUS_DB_CONN }}
      run: |
        python run.py --instructor-reports --current-month --handlers base44sync
        
    - name: Upload output files as artifacts (for debugging)
      uses: actions/upload-artifact@v4
      if: always()  # Upload even if the job fails
      with:
        name: calendar-sync-output
        path: output/
        retention-days: 7

    - name: Debug Python path
      run: |
        python - << 'PY'
import sys, pprint, os
pprint.pprint(sys.path)
print('\nDirectories:')
print(os.listdir())
print('\nSrc data contents:')
import os, pathlib, json, sys
for root, dirs, files in os.walk('src/data'):
    print(root, dirs, files)
PY 